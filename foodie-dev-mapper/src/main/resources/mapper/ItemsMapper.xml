<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.xm.mapper.ItemsMapper" >
  <resultMap id="BaseResultMap" type="indi.xm.pojo.Items" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="cat_id" property="catId" jdbcType="INTEGER" />
    <result column="root_cat_id" property="rootCatId" jdbcType="INTEGER" />
    <result column="sell_counts" property="sellCounts" jdbcType="INTEGER" />
    <result column="on_off_status" property="onOffStatus" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>

  <select id="searchItems" parameterType="map" resultType="indi.xm.vo.SearchItemsVO">
    SELECT
      i.id AS itemId,
      i.item_name AS itemName,
      i.sell_counts AS sell_counts,
      img.url as imgUrl,
      tempSpec.price_discount AS prise
    FROM
      items i
        LEFT JOIN items_img img ON i.id = img.item_id
        LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) tempSpec
        ON i.id = tempSpec.item_id
    WHERE
      img.is_main = 1
      <if test="map.keywords != null and map.keywords != '' ">
      /* 字符串拼接不能用 # 号，而是 $ 符号 */
        AND i.item_name like '%${map.keywords}%'
      </if>
      order by
    --       k: 默认，代表默认排序
    --       c: 根据销量排序
    --       p: 根据价格排序
      <choose>
        <when test="map.sort == &quot;c &quot;">
          i.sell_counts desc
        </when>
        <when test="map.sort ==  &quot;p &quot;">
          tempSpec.price_discount asc
        </when>
        <otherwise>
          i.item_name asc
        </otherwise>
      </choose>
  </select>

  <!-- 通过三级分类查找 -->
  <select id="searchItemsByThirdCat" parameterType="map" resultType="indi.xm.vo.SearchItemsVO">
    SELECT
    i.id AS itemId,
    i.item_name AS itemName,
    i.sell_counts AS sell_counts,
    img.url as imgUrl,
    tempSpec.price_discount AS prise
    FROM
    items i
    LEFT JOIN items_img img ON i.id = img.item_id
    LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) tempSpec
    ON i.id = tempSpec.item_id
    WHERE
    img.is_main = 1
    and i.cat_id = #{map.catId}
    order by
    --       k: 默认，代表默认排序
    --       c: 根据销量排序
    --       p: 根据价格排序
    <choose>
      <when test="map.sort == &quot;c &quot;">
        i.sell_counts desc
      </when>
      <when test="map.sort ==  &quot;p &quot;">
        tempSpec.price_discount asc
      </when>
      <otherwise>
        i.item_name asc
      </otherwise>
    </choose>
  </select>

  <select id="queryItemsBySpecIds" parameterType="list" resultType="indi.xm.vo.ShopCartVO">
    SELECT
      i.id as itemId,
      i.item_name as itemName,
      img.url as itemImgUrl,
      spec.id as specId,
      spec.`name` as specName,
      spec.price_discount as priceDiscount,
      spec.price_normal as priceNormal
    FROM
      items_spec spec
        LEFT JOIN items i ON spec.item_id = i.id
        LEFT JOIN items_img img ON i.id = img.item_id
    WHERE
      img.is_main = 1
      AND spec.id IN
        <foreach collection="specIdList" index="index" item="specId" close=")" open="(" separator=",">
          #{specId}
        </foreach>
  </select>
</mapper>